language: cpp
sudo: false
dist: trusty
matrix:
  include:
  - os: linux
    env:
      - MATRIX_EVAL="CXX_COMPILER=g++ && BOOST_USE='using g++ ;'"
  - os: linux
    env:
      - MATRIX_EVAL="CXX_COMPILER=clang++ && BOOST_USE='using clang++ ;'"
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-5
    env:
      - MATRIX_EVAL="CXX_COMPILER=g++-5 && BOOST_USE='using g++ : 5 ;'"
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-6
    env:
      - MATRIX_EVAL="CXX_COMPILER=g++-6 && BOOST_USE='using g++ : 6 ;'"
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-7
    env:
      - MATRIX_EVAL="CXX_COMPILER=g++-7 && BOOST_USE='using g++ : 7 ;'"
  - os: linux
    addons:
      apt:
        sources:
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
    env:
      - MATRIX_EVAL="CXX_COMPILER=clang++-4.0 && BOOST_USE='using clang++ : 4.0 ;'"
  - os: linux
    addons:
      apt:
        sources:
          - llvm-toolchain-trusty-5.0
        packages:
          - clang-5.0
    env:
      - MATRIX_EVAL="CXX_COMPILER=clang++-5.0 && BOOST_USE='using clang++ : 5.0 ;'"
before_install:
  - eval "${MATRIX_EVAL}"
  - pip install --user cpp-coveralls
  - echo "CXX := ${CXX_COMPILER}" > local.mk
script: bash ./ci.sh
after_success:
  - coveralls --exclude gtest --exclude-pattern .*_test.cc --gcov-options '\-lp'
cache:
  directories:
    - tools/protobuf
    - tools/capnproto
    - tools/boost
notifications:
  email: false
